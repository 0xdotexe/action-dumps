name: DeployStaticWeb

on:
  repository_dispatch:
    types: [deployment]
  workflow_dispatch:
    
jobs:
  build:
    runs-on: ubuntu-latest
        
    steps:
      - name: Github Checkout
        uses: actions/checkout@v2.3.3
        with:
          ref: ${{ github.head_ref }}

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.0.0
          
      - name: install bundler
        run: |
          gem install jekyll bundler
          
      - name: bundle install
        run: |
          bundle install
        working-directory: ./rawBlog
        shell: bash
        
      - name: build
        run: |
          jekyll build && cd _site && jekyll build && mv _site ../../storage/buildData
        working-directory: ./rawBlog
        shell: bash
        
      - name: Use Node.js 16
        uses: actions/setup-node@v3
        with:
          node-version: 16
      
      - name: ts-node
        run: npm i -g ts-node@latest
        
      - name: Install dependencies
        run: yarn install
        working-directory: ./storage
    
          
      - name: upload to ipfs
        run: |
          IPFSUP="$(yarn web3-storage-upload | awk -F 'cid: ' '{print $2}' | uniq)"
          echo "CID=$(echo $IPFSUP)" >> $GITHUB_ENV
        env:
          WEB3_STORAGE_TOKEN: ${{ secrets.IPFS_TOKEN }}
        working-directory: ./storage
      
      - name: check env
        run: echo ${{ env.CID }}
        shell: bash
        
      - name: cloudflare
        run: |
          CFLARE_HOST="$(curl -sL -X GET 'https://api.cloudflare.com/client/v4/zones/${{ secrets.CFLARE_ZONE }}/web3/hostnames' -H 'X-Auth-Email: ${{ secrets.GH_EMAIL }}' -H 'X-Auth-Key: ${{ secrets.CFLARE_KEY }}' -H 'Content-Type: application/json' | jq -r '.result[0].id')"
          echo "CFLARE_HOST=$(echo $CFLARE_HOST)" >> $GITHUB_ENV
        shell: bash
        
      - name: check hostname
        run: echo ${{ env.CFLARE_HOST }}
        
      - name: abcd
        run: |
          curl -sL -X PATCH "https://api.cloudflare.com/client/v4/zones/${{ secrets.CFLARE_ZONE }}/web3/hostnames/${{ env.CFLARE_HOST }}" -H "X-Auth-Email: ${{ secrets.GH_EMAIL }}" -H "X-Auth-Key: ${{ secrets.CFLARE_KEY }}" -H "Content-Type: application/json" --data '{"description":"IPFS gateway.","dnslink":"/ipfs/${{ env.CID }}"}'
      - name: Push changes to github
        run: |
          git config --global user.name "${{ env.COMMIT_AUTHOR }}"
          git config --global user.email "${{ secrets.GH_EMAIL }}"
          git add -A
          git commit -a -m "${{ env.COMMIT_MESSAGE }}"
          git push
        env:
          COMMIT_AUTHOR: "Sarvagya Sagar"
          COMMIT_MESSAGE: "updates: pushed recently build _site folder"
          
    continue-on-error: true
